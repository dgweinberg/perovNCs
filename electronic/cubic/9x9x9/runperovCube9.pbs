#!/bin/bash 
#PBS -N perovCube9
#PBS -l nodes=1:ppn=16:turtle
#PBS -l mem=120GB
#PBS -q batch

source /opt/intel/oneapi/setvars.sh

###########################################################################
				#Edit these#
###########################################################################
# Perov build settings
nXCell=9
nYCell=9
nZCell=9
phasePar=0.0

# Grid settings
nXGrid="240"
nYGrid="240"
nZGrid="240"
dGrid="0.5"

# Filter settings
nFiltWindows='6'
nStatePerWindow='16'
newtonLength='10240'
vbMin='-0.247'; vbMax='-0.217'
cbMin='-0.162'; cbMax='-0.142'
SOFlag='1'

# BSE settings
epsilon="6.1 6.1 6.1"
bseDeltaEe="0.2"
bseDeltaEh="0.1"
maxElecStates="60"
maxHoleStates="80"
sigmaCutoff="0.00001"


# OpenMP settings
export OMP_NUM_THREADS=16
export OMP_PLACES=threads
export OMP_PROC_BIND=spread


###########################################################################
###########################################################################
echo "running on node $(hostname)"
date

# Define the necessary paths to executables and 
# pseudopotential files
#check if running in PBS environment
if [[ -z "$PBS_O_WORKDIR" ]]; then
        cwd=$(pwd)
        scratchDir=$(pwd)
else
        cd $PBS_O_WORKDIR
        cwd=$(pwd)
        echo "Submit dirrectory:" 
        echo $cwd
        scratchDir="/scratch/$PBS_JOBNAME"
fi
filtDir="$scratchDir/filter"
bseDir="$scratchDir/bse"
pseudoDir="$cwd/../../pots/cubic"
hfiltDir="$cwd/filter"
hbseDir="$cwd/bse"
filtXDir="/home/dweinberg/Projects/rashba/code/perovCubeFilter"
bseXDir="/home/dweinberg/Projects/rashba/code/spinor_bse"


# Make necessary home and scratch directories
mkdir -p $filtDir; rm -rf $filtDir/*
mkdir -p $hfiltDir
mkdir -p $bseDir; rm -rf $bseDir/*
mkdir -p $hbseDir


# make configuration
cd $filtDir
python ~/scripts/python/perovMixBuild.py $nXCell $nYCell $nZCell

#make filter input.par
cat > $filtDir/input.par << EOF
$nXGrid
$nYGrid
$nZGrid
$dGrid
$nFiltWindows
$nStatePerWindow
$newtonLength
$vbMin $vbMax
$cbMin $cbMax
$OMP_NUM_THREADS
$SOFlag
EOF

#copy pots for filter
cp $pseudoDir/pot_I.dat $filtDir/CpotI.par
cp $pseudoDir/pot_I.dat $filtDir/OpotI.par
cp $pseudoDir/pot_Cs.dat $filtDir/CpotCs.par
cp $pseudoDir/pot_Cs.dat $filtDir/OpotCs.par
cp $pseudoDir/pot_Pb.dat $filtDir/CpotPb.par
cp $pseudoDir/pot_Pb.dat $filtDir/OpotPb.par


cp $pseudoDir/ISO.dat $filtDir/I_ortho_SO.par
cp $pseudoDir/ISO.dat $filtDir/I_cubic_SO.par
cp $pseudoDir/CsSO.dat $filtDir/Cs_ortho_SO.par
cp $pseudoDir/CsSO.dat $filtDir/Cs_cubic_SO.par
cp $pseudoDir/PbSO.dat $filtDir/Pb_ortho_SO.par
cp $pseudoDir/PbSO.dat $filtDir/Pb_cubic_SO.par


#copy and run filter
cd $filtDir
ln -sf $filtXDir/spinOrbitFilter.x $filtDir
./spinOrbitFilter.x > filter_run.dat

if [ $? -eq 0 ]
then
	echo "Done with filter!"
	date
else
	echo "Error in filter!" >&2
	echo "$(cat error)" >&2
	exit 1
fi


# move selected output to home dir
cp $filtDir/eval.dat $hfiltDir
cp $filtDir/filter_run.dat $hfiltDir


# link data for bse
ln -sf $filtDir/psi.dat $bseDir/psi.par
cp $filtDir/eval.dat $bseDir/eval.par
cp $filtDir/conf.par $bseDir/conf.par

#make bse input.par
cat > $bseDir/input.par << EOF
$nXGrid $dGrid
$nYGrid $dGrid
$nZGrid $dGrid
$epsilon
$bseDeltaEe $bseDeltaEh $sigmaCutoff
$maxElecStates $maxHoleStates
$OMP_NUM_THREADS
EOF

# copy and run bse
cd $bseDir
ln -sf $bseXDir/bs.x $bseDir
./bs.x > bse_run.dat

if [ $? -eq 0 ]
then
        echo "Done with bse!"
else
        echo "Error in bse!" >&2
        exit 1
fi


# Move BSE results to BSE home directories 
sort -k 4 OS0.dat > sorted_OS0.dat
#sort -k 4 M0.dat > sorted_M0.dat
#sort -k 3 rs.dat > sorted_rs.dat
cp bse_run.dat exciton.dat OS.dat OS0.dat spins.dat angular.dat couple.dat BSEeval.par conf.par input.par $hbseDir/ 

